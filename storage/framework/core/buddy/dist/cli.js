// @bun
import{$a as _,Ma as M,Na as N,Oa as O,Pa as Q,Qa as R,Ra as S,Sa as T,Ua as U,Va as V,Xa as W,Ya as X,Za as Y,_a as Z,ab as $,bb as x,cb as z,db as C,eb as F,fb as P,gb as h,hb as A,ib as D,jb as k,kb as f,lb as j,mb as I,nb as g,ob as p,pb as a,qb as m,rb as n,sb as J,vb as l,wb as i,yb as c,zb as t}from"./chunk-hrn96am2.js";import"./chunk-akk9n6nz.js";import"./chunk-m10mjp5k.js";import"./chunk-c0txraty.js";import"./chunk-m15mygrv.js";import"./chunk-4d8a8nhy.js";import"./chunk-65kymcan.js";import"./chunk-2sfbmdp6.js";import"./chunk-mgeq9bsv.js";import"./chunk-xm7hfgtx.js";import"./chunk-y4ph2m8k.js";import"./chunk-x2cvxstj.js";import"./chunk-8404pwsb.js";import"./chunk-fn39aesd.js";import"./chunk-ekmtq77t.js";import"./chunk-3fsq8mkn.js";import"./chunk-6j7ax17c.js";import w from"process";import{runAction as e}from"@stacksjs/actions";import{cli as o,log as v}from"@stacksjs/cli";import{Action as r}from"@stacksjs/enums";import{path as L}from"@stacksjs/path";import{fs as b}from"@stacksjs/storage";import{ensureProjectIsInitialized as s}from"@stacksjs/utils";w.on("uncaughtException",(q)=>{v.debug("Buddy uncaughtException"),v.error(q),w.exit(1)});w.on("unhandledRejection",(q)=>{v.debug("Buddy unhandledRejection"),v.error(q),w.exit(1)});async function y(){let q=o("buddy");if(J(q),z(q),await s())v.debug("Project is initialized");else{v.info("Your `APP_KEY` is not yet set"),v.info("Generating application key...");let B=await e(r.KeyGenerate);if(B.isErr())v.error("Failed to set random application key.",B.error),w.exit()}M(q),N(q),O(q),Q(q),R(q),S(q),T(q),V(q),X(q),U(q),W(q),D(q),f(q),Z(q),_(q),$(q),x(q),C(q),F(q),P(q),h(q),A(q),j(q),I(q),g(q),p(q),m(q),Y(q),n(q),J(q),a(q),l(q),i(q),t(q),k(q),c(q),await u(q),q.help(),q.parse()}await y();async function u(q){let G=L.appPath("Commands"),B=b.readdirSync(G).filter((E)=>E.endsWith(".ts"));for(let E of B){let H=await import(`${G}/${E}`);if(typeof H.default==="function")H.default(q);else console.error(`Expected a default export function in ${E}, but got:`,H.default)}let K=await import(L.listenersPath("Console.ts"));if(typeof K.default==="function")K.default(q)}
