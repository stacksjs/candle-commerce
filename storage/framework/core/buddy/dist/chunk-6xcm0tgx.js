import{Sd as g,Wd as d}from"./chunk-q9cxybaw.js";import{ce as s,ee as y,fe as u,ge as C}from"./chunk-v97r5n5v.js";function c(o){try{let e=new Set(Array.from(o.match(/([A-Z_]){3,}/g)??[]));return e.delete("CONFIG"),e.delete("CONFIG_PREFIX_SEPARATOR"),e.delete("ENV"),[...e].join(", ")}catch(e){return o}}var l=(o,e)=>async()=>{try{let t=o(process.env,e);if(t===void 0)throw new Error;return t}catch(t){throw new s(t.message||`Not found in ENV: ${c(o.toString())}`,{logger:e?.logger})}};var h=(o,{preferredFile:e="config",...t}={})=>async()=>{let r=g(t),{configFile:n,credentialsFile:i}=await d(t),f=i[r]||{},m=n[r]||{},S=e==="config"?{...f,...m}:{...m,...f};try{let p=o(S,e==="config"?n:i);if(p===void 0)throw new Error;return p}catch(a){throw new s(a.message||`Not found in config files w/ profile [${r}]: ${c(o.toString())}`,{logger:t.logger})}};var N=(o)=>typeof o==="function",w=(o)=>N(o)?async()=>await o():u(o);var k=({environmentVariableSelector:o,configFileSelector:e,default:t},r={})=>{let{signingName:n,logger:i}=r;return C(y(l(o,{signingName:n,logger:i}),h(e,r),w(t)))};function F(o){let e={};if(o=o.replace(/^\?/,""),o)for(let t of o.split("&")){let[r,n=null]=t.split("=");if(r=decodeURIComponent(r),n)n=decodeURIComponent(n);if(!(r in e))e[r]=n;else if(Array.isArray(e[r]))e[r].push(n);else e[r]=[e[r],n]}return e}var E=(o)=>{if(typeof o==="string")return E(new URL(o));let{hostname:e,pathname:t,port:r,protocol:n,search:i}=o,f;if(i)f=F(i);return{hostname:e,port:r?parseInt(r):void 0,protocol:n,path:t,query:f}};
export{k as Wc,E as Xc};
