{"version":3,"file":"pretty-bytes.js","names":["numberString"],"sources":["../../../../../../../node_modules/pretty-bytes/index.js"],"sourcesContent":["const BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB',\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'KiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB',\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit',\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit',\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale, options);\n\t} else if (locale === true || options !== undefined) {\n\t\tresult = number.toLocaleString(undefined, options);\n\t}\n\n\treturn result;\n};\n\nconst log10 = numberOrBigInt => {\n\tif (typeof numberOrBigInt === 'number') {\n\t\treturn Math.log10(numberOrBigInt);\n\t}\n\n\tconst string = numberOrBigInt.toString(10);\n\n\treturn string.length + Math.log10('0.' + string.slice(0, 15));\n};\n\nconst log = numberOrBigInt => {\n\tif (typeof numberOrBigInt === 'number') {\n\t\treturn Math.log(numberOrBigInt);\n\t}\n\n\treturn log10(numberOrBigInt) * Math.log(10);\n};\n\nconst divide = (numberOrBigInt, divisor) => {\n\tif (typeof numberOrBigInt === 'number') {\n\t\treturn numberOrBigInt / divisor;\n\t}\n\n\tconst integerPart = numberOrBigInt / BigInt(divisor);\n\tconst remainder = numberOrBigInt % BigInt(divisor);\n\treturn Number(integerPart) + (Number(remainder) / divisor);\n};\n\nexport default function prettyBytes(number, options) {\n\tif (typeof number !== 'bigint' && !Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = {\n\t\tbits: false,\n\t\tbinary: false,\n\t\tspace: true,\n\t\t...options,\n\t};\n\n\tconst UNITS = options.bits\n\t\t? (options.binary ? BIBIT_UNITS : BIT_UNITS)\n\t\t: (options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tconst separator = options.space ? ' ' : '';\n\n\tif (options.signed && (typeof number === 'number' ? number === 0 : number === 0n)) {\n\t\treturn ` 0${separator}${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tlet localeOptions;\n\n\tif (options.minimumFractionDigits !== undefined) {\n\t\tlocaleOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\t}\n\n\tif (options.maximumFractionDigits !== undefined) {\n\t\tlocaleOptions = {maximumFractionDigits: options.maximumFractionDigits, ...localeOptions};\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale, localeOptions);\n\t\treturn prefix + numberString + separator + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? log(number) / Math.log(1024) : log10(number) / 3), UNITS.length - 1);\n\tnumber = divide(number, (options.binary ? 1024 : 1000) ** exponent);\n\n\tif (!localeOptions) {\n\t\tnumber = number.toPrecision(3);\n\t}\n\n\tconst numberString = toLocaleString(Number(number), options.locale, localeOptions);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + separator + unit;\n}\n"],"x_google_ignoreList":[0],"mappings":";AAAA,MAAM,aAAa;CAClB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;AAED,MAAM,eAAe;CACpB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;AAED,MAAM,YAAY;CACjB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;AAED,MAAM,cAAc;CACnB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;AAQD,MAAM,iBAAiB,CAAC,QAAQ,QAAQ,YAAY;CACnD,IAAI,SAAS;AACb,KAAI,OAAO,WAAW,YAAY,MAAM,QAAQ,OAAO,EACtD,SAAS,OAAO,eAAe,QAAQ,QAAQ;UACrC,WAAW,QAAQ,YAAY,QACzC,SAAS,OAAO,eAAe,QAAW,QAAQ;AAGnD,QAAO;AACP;AAED,MAAM,QAAQ,oBAAkB;AAC/B,KAAI,OAAO,mBAAmB,SAC7B,QAAO,KAAK,MAAM,eAAe;CAGlC,MAAM,SAAS,eAAe,SAAS,GAAG;AAE1C,QAAO,OAAO,SAAS,KAAK,MAAM,OAAO,OAAO,MAAM,GAAG,GAAG,CAAC;AAC7D;AAED,MAAM,MAAM,oBAAkB;AAC7B,KAAI,OAAO,mBAAmB,SAC7B,QAAO,KAAK,IAAI,eAAe;AAGhC,QAAO,MAAM,eAAe,GAAG,KAAK,IAAI,GAAG;AAC3C;AAED,MAAM,SAAS,CAAC,gBAAgB,YAAY;AAC3C,KAAI,OAAO,mBAAmB,SAC7B,QAAO,iBAAiB;CAGzB,MAAM,cAAc,iBAAiB,OAAO,QAAQ;CACpD,MAAM,YAAY,iBAAiB,OAAO,QAAQ;AAClD,QAAO,OAAO,YAAY,GAAI,OAAO,UAAU,GAAG;AAClD;AAED,SAAwB,YAAY,QAAQ,SAAS;AACpD,KAAI,OAAO,WAAW,YAAY,CAAC,OAAO,SAAS,OAAO,CACzD,OAAM,IAAI,UAAU,CAAC,8BAA8B,EAAE,OAAO,OAAO,EAAE,EAAE,QAAQ;CAGhF,UAAU;EACT,MAAM;EACN,QAAQ;EACR,OAAO;EACP,GAAG;CACH;CAED,MAAM,QAAQ,QAAQ,OAClB,QAAQ,SAAS,cAAc,YAC/B,QAAQ,SAAS,eAAe;CAEpC,MAAM,YAAY,QAAQ,QAAQ,MAAM;AAExC,KAAI,QAAQ,WAAW,OAAO,WAAW,WAAW,WAAW,IAAI,WAAW,IAC7E,QAAO,CAAC,EAAE,EAAE,YAAY,MAAM,IAAI;CAGnC,MAAM,aAAa,SAAS;CAC5B,MAAM,SAAS,aAAa,MAAO,QAAQ,SAAS,MAAM;AAE1D,KAAI,YACH,SAAS,CAAC;CAGX,IAAI;AAEJ,KAAI,QAAQ,0BAA0B,QACrC,gBAAgB,EAAC,uBAAuB,QAAQ,sBAAsB;AAGvE,KAAI,QAAQ,0BAA0B,QACrC,gBAAgB;EAAC,uBAAuB,QAAQ;EAAuB,GAAG;CAAc;AAGzF,KAAI,SAAS,GAAG;EACf,MAAMA,iBAAe,eAAe,QAAQ,QAAQ,QAAQ,cAAc;AAC1E,SAAO,SAASA,iBAAe,YAAY,MAAM;CACjD;CAED,MAAM,WAAW,KAAK,IAAI,KAAK,MAAM,QAAQ,SAAS,IAAI,OAAO,GAAG,KAAK,IAAI,KAAK,GAAG,MAAM,OAAO,GAAG,EAAE,EAAE,MAAM,SAAS,EAAE;CAC1H,SAAS,OAAO,SAAS,QAAQ,SAAS,OAAO,QAAS,SAAS;AAEnE,KAAI,CAAC,eACJ,SAAS,OAAO,YAAY,EAAE;CAG/B,MAAM,eAAe,eAAe,OAAO,OAAO,EAAE,QAAQ,QAAQ,cAAc;CAElF,MAAM,OAAO,MAAM;AAEnB,QAAO,SAAS,eAAe,YAAY;AAC3C"}